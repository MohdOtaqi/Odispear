================================================================================
UNITY PLATFORM - COMPLETE DEPLOYMENT COMMANDS FOR AWS
================================================================================

Step 1: SSH into your AWS server
ssh ubuntu@16.171.225.46

Step 2: Navigate to project directory
cd /var/www/Odispear

Step 3: Pull latest code from GitHub
git fetch origin
git reset --hard origin/main

Step 4: Setup Backend
cd unity-platform/backend
npm install
npm install multer aws-sdk bcryptjs jsonwebtoken pg redis socket.io express-rate-limit helmet cors dotenv winston uuid date-fns joi

Step 5: Create Backend Environment File
cat > .env << 'EOF'
NODE_ENV=production
PORT=3000
DATABASE_URL=postgresql://unity_app:sS6lR45ZNHkqj9OY5@localhost:5432/unity_platform
REDIS_URL=redis://localhost:6379
JWT_SECRET=unity-platform-jwt-secret-production-2024
JWT_EXPIRES_IN=7d
CORS_ORIGIN=http://16.171.225.46,http://16.171.225.46:5173
AWS_ACCESS_KEY_ID=AKIAVL7IKAIUL2QW2U2M
AWS_SECRET_ACCESS_KEY=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
AWS_S3_BUCKET=unity-platform-uploads
AWS_REGION=us-east-1
AGORA_APP_ID=e7f6e9aeecf14b2ba10e3f40be9f56e7
AGORA_APP_CERTIFICATE=b4a91481752d4a22bcdd43fb2bcac015
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=100
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,image/webp,application/pdf,text/plain,audio/mpeg,audio/wav,audio/ogg
EOF

Step 6: Build Backend
npm run build

Step 7: Setup Frontend
cd ../frontend
npm install
npm install sonner agora-rtc-sdk-ng emoji-picker-react react-hot-toast axios socket.io-client zustand react-router-dom lucide-react date-fns

Step 8: Create Frontend Environment File
cat > .env << 'EOF'
VITE_API_URL=http://16.171.225.46:3000
VITE_WS_URL=ws://16.171.225.46:3000
VITE_AGORA_APP_ID=e7f6e9aeecf14b2ba10e3f40be9f56e7
EOF

Step 9: Build Frontend
npm run build

Step 10: Install Global Dependencies
sudo npm install -g serve pm2

Step 11: Run Database Migrations
cd ../database
sudo -u postgres psql -d unity_platform < schema.sql
sudo -u postgres psql -d unity_platform < friends_dm_migration.sql
sudo -u postgres psql -d unity_platform < voice_sessions.sql
sudo -u postgres psql -d unity_platform < soundboard_migration.sql

Step 12: Stop All PM2 Processes
pm2 stop all
pm2 delete all

Step 13: Create PM2 Ecosystem File
cd /var/www/Odispear/unity-platform
cat > ecosystem.config.js << 'EOF'
module.exports = {
  apps: [
    {
      name: 'unity-backend',
      script: './backend/dist/index.js',
      cwd: '/var/www/Odispear/unity-platform',
      instances: 1,
      exec_mode: 'fork',
      env: {
        NODE_ENV: 'production',
        PORT: 3000
      },
      error_file: './logs/backend-error.log',
      out_file: './logs/backend-out.log',
      time: true,
      max_memory_restart: '500M'
    },
    {
      name: 'unity-frontend',
      script: 'npx',
      args: 'serve -s frontend/dist -l 5173',
      cwd: '/var/www/Odispear/unity-platform',
      instances: 1,
      exec_mode: 'fork',
      env: {
        NODE_ENV: 'production'
      },
      error_file: './logs/frontend-error.log',
      out_file: './logs/frontend-out.log',
      time: true,
      interpreter: 'none'
    }
  ]
};
EOF

Step 14: Create Logs Directory
mkdir -p logs

Step 15: Start PM2 Services
pm2 start ecosystem.config.js
pm2 save
pm2 startup systemd -u ubuntu --hp /home/ubuntu

Step 16: Configure Nginx
sudo tee /etc/nginx/sites-available/unity-platform > /dev/null << 'EOF'
server {
    listen 80;
    server_name 16.171.225.46;
    client_max_body_size 20M;

    location / {
        proxy_pass http://127.0.0.1:5173;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /socket.io/ {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /health {
        proxy_pass http://127.0.0.1:3000/health;
    }
}
EOF

Step 17: Enable Nginx Site
sudo ln -sf /etc/nginx/sites-available/unity-platform /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl reload nginx

Step 18: Verify Deployment
pm2 status
curl http://localhost:3000/health
curl http://localhost:5173

================================================================================
SINGLE LINE DEPLOYMENT COMMAND:
================================================================================

cd /var/www/Odispear && git fetch origin && git reset --hard origin/main && cd unity-platform/backend && npm install && npm install multer aws-sdk bcryptjs jsonwebtoken && npm run build && cd ../frontend && npm install && npm install sonner agora-rtc-sdk-ng && echo "VITE_API_URL=http://16.171.225.46:3000" > .env && echo "VITE_WS_URL=ws://16.171.225.46:3000" >> .env && echo "VITE_AGORA_APP_ID=e7f6e9aeecf14b2ba10e3f40be9f56e7" >> .env && npm run build && cd .. && sudo npm install -g serve && pm2 stop all && pm2 delete all && pm2 start backend/dist/index.js --name unity-backend && pm2 start "npx serve -s frontend/dist -l 5173" --name unity-frontend && pm2 save && echo "DEPLOYED! Visit http://16.171.225.46"

================================================================================
